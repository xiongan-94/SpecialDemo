基础:
	1.运行模式
	2.提交流程
	3.共享组   任何算子都可以设置共享组,除了keyBy和shuffle等(传输方向)
	4.任务链 4个条件

状态编程: 
	1.manager状态: 算子状态和键控状态
	2.raw状态:自己管理存储和重启的恢复
容错机制:
	1.state backend 状态后端 默认将状态保存到内存,建议修改为文件系统
	2.check point 检查点
状态一致性
	1.端到端的状态一致性保证

背压机制(back pressure)
	flink能够自己解决背压机制,官方给出了监控方法 100个样本的堆栈跟踪,看source有多少比例被阻塞
	OK：0 <= Ratio <= 0.10
	LOW：0.10 <Ratio <= 0.5
	HIGH：0.5 <Ratio <= 1
Streaming 的背压主要是根据下游任务的执行情况等，来控制上游的速率。Flink 的背压是通过一定时间内堆栈跟踪，监控阻塞的比率来确定背压的。

	

tableAPI和flinkSQL
	使用1.11版本,blink的推荐使用,同时对于hive的兼容性更好

dataStreamAPI
	rich函数多出 生命周期和运行上下文

processAPI
	多出定时器的使用
